{"ast":null,"code":"var _jsxFileName = \"/Users/JOJO/Documents/devArea/inProgress/mapstats/src/components/Dashboard/index.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$(),\n  _s4 = $RefreshSig$();\nimport React, { useState, useContext, createContext } from 'react';\nimport { MapContainer, TileLayer, GeoJSON } from 'react-leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport regionsGeoJSON from './france-regions.json';\n\n// Contexte pour gérer les régions\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RegionContext = /*#__PURE__*/createContext();\nconst RegionProvider = ({\n  children\n}) => {\n  _s();\n  const [regions, setRegions] = useState({});\n  const incrementRegion = regionName => {\n    setRegions(prev => ({\n      ...prev,\n      [regionName]: (prev[regionName] || 0) + 1\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(RegionContext.Provider, {\n    value: {\n      regions,\n      incrementRegion\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n_s(RegionProvider, \"xjlgFLymkzxRXYwMDrgGLjvXbyw=\");\n_c = RegionProvider;\nconst Dashboard = () => {\n  return /*#__PURE__*/_jsxDEV(RegionProvider, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        fontFamily: 'Arial, sans-serif'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Carte des R\\xE9gions Fran\\xE7aises\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(RegionForm, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(RegionStats, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(RegionMap, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_c2 = Dashboard;\nconst RegionForm = () => {\n  _s2();\n  const {\n    incrementRegion\n  } = useContext(RegionContext);\n  const [selectedRegion, setSelectedRegion] = useState('');\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (selectedRegion) {\n      incrementRegion(selectedRegion);\n      setSelectedRegion('');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    style: {\n      display: 'flex',\n      gap: '10px',\n      marginBottom: '20px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"select\", {\n      value: selectedRegion,\n      onChange: e => setSelectedRegion(e.target.value),\n      style: {\n        padding: '5px',\n        width: '200px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"S\\xE9lectionnez une r\\xE9gion\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), regionsGeoJSON.features.map(region => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: region.properties.nom,\n        children: region.properties.nom\n      }, region.properties.nom, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      disabled: !selectedRegion,\n      style: {\n        padding: '5px 10px',\n        backgroundColor: selectedRegion ? '#4CAF50' : '#cccccc'\n      },\n      children: \"Ajouter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_s2(RegionForm, \"gY37E84Rwy0ejKDCetyJCXbrvOQ=\");\n_c3 = RegionForm;\nconst RegionStats = () => {\n  _s3();\n  const {\n    regions\n  } = useContext(RegionContext);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginBottom: '20px',\n      padding: '10px',\n      border: '1px solid #ddd',\n      borderRadius: '5px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Statistiques des R\\xE9gions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), Object.entries(regions).length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Aucune r\\xE9gion ajout\\xE9e\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n      style: {\n        listStyleType: 'none',\n        padding: 0\n      },\n      children: Object.entries(regions).map(([region, count]) => /*#__PURE__*/_jsxDEV(\"li\", {\n        style: {\n          display: 'flex',\n          justifyContent: 'space-between',\n          marginBottom: '5px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: region\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            fontWeight: 'bold'\n          },\n          children: count\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 15\n        }, this)]\n      }, region, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n};\n_s3(RegionStats, \"qYstFNDx2xYULkab9qq1nLwgB34=\");\n_c4 = RegionStats;\nconst RegionMap = () => {\n  _s4();\n  const {\n    regions\n  } = useContext(RegionContext);\n  const getColor = regionName => {\n    const count = regions[regionName] || 0;\n    return count > 5 ? '#800026' : count > 3 ? '#BD0026' : count > 1 ? '#FED976' : '#FFEDA0';\n  };\n  const onEachFeature = (feature, layer) => {\n    const regionName = feature.properties.nom;\n    const count = regions[regionName] || 0;\n    layer.setStyle({\n      fillColor: getColor(regionName),\n      fillOpacity: 0.7,\n      color: '#000',\n      weight: 1\n    });\n    layer.bindPopup(`\n      <strong>${regionName}</strong><br>\n      Nombre de fois ajouté: ${count}\n    `);\n  };\n  return /*#__PURE__*/_jsxDEV(MapContainer, {\n    style: {\n      height: '500px',\n      width: '800px'\n    },\n    center: [46.5, 2.5],\n    zoom: 5,\n    maxZoom: 10,\n    minZoom: 4,\n    children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n      url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GeoJSON, {\n      data: regionsGeoJSON,\n      onEachFeature: onEachFeature\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }, this)]\n  }, \"france-map\", true, {\n    fileName: _jsxFileName,\n    lineNumber: 160,\n    columnNumber: 5\n  }, this);\n};\n_s4(RegionMap, \"qYstFNDx2xYULkab9qq1nLwgB34=\");\n_c5 = RegionMap;\nexport default Dashboard;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"RegionProvider\");\n$RefreshReg$(_c2, \"Dashboard\");\n$RefreshReg$(_c3, \"RegionForm\");\n$RefreshReg$(_c4, \"RegionStats\");\n$RefreshReg$(_c5, \"RegionMap\");","map":{"version":3,"names":["React","useState","useContext","createContext","MapContainer","TileLayer","GeoJSON","regionsGeoJSON","jsxDEV","_jsxDEV","RegionContext","RegionProvider","children","_s","regions","setRegions","incrementRegion","regionName","prev","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","Dashboard","style","display","flexDirection","alignItems","fontFamily","RegionForm","RegionStats","RegionMap","_c2","_s2","selectedRegion","setSelectedRegion","handleSubmit","e","preventDefault","onSubmit","gap","marginBottom","onChange","target","padding","width","features","map","region","properties","nom","type","disabled","backgroundColor","_c3","_s3","border","borderRadius","Object","entries","length","listStyleType","count","justifyContent","fontWeight","_c4","_s4","getColor","onEachFeature","feature","layer","setStyle","fillColor","fillOpacity","color","weight","bindPopup","height","center","zoom","maxZoom","minZoom","url","data","_c5","$RefreshReg$"],"sources":["/Users/JOJO/Documents/devArea/inProgress/mapstats/src/components/Dashboard/index.jsx"],"sourcesContent":["import React, { useState, useContext, createContext } from 'react';\nimport { MapContainer, TileLayer, GeoJSON } from 'react-leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport regionsGeoJSON from './france-regions.json';\n\n// Contexte pour gérer les régions\nconst RegionContext = createContext();\n\nconst RegionProvider = ({ children }) => {\n  const [regions, setRegions] = useState({});\n  \n  const incrementRegion = (regionName) => {\n    setRegions(prev => ({\n      ...prev,\n      [regionName]: (prev[regionName] || 0) + 1\n    }));\n  };\n  \n  return (\n    <RegionContext.Provider value={{ regions, incrementRegion }}>\n      {children}\n    </RegionContext.Provider>\n  );\n};\n\nconst Dashboard = () => {\n  return (\n    <RegionProvider>\n      <div style={{ \n        display: 'flex', \n        flexDirection: 'column', \n        alignItems: 'center', \n        fontFamily: 'Arial, sans-serif' \n      }}>\n        <h1>Carte des Régions Françaises</h1>\n        <RegionForm />\n        <RegionStats />\n        <RegionMap />\n      </div>\n    </RegionProvider>\n  );\n};\n\nconst RegionForm = () => {\n  const { incrementRegion } = useContext(RegionContext);\n  const [selectedRegion, setSelectedRegion] = useState('');\n  \n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (selectedRegion) {\n      incrementRegion(selectedRegion);\n      setSelectedRegion('');\n    }\n  };\n  \n  return (\n    <form \n      onSubmit={handleSubmit} \n      style={{ \n        display: 'flex', \n        gap: '10px', \n        marginBottom: '20px' \n      }}\n    >\n      <select\n        value={selectedRegion}\n        onChange={(e) => setSelectedRegion(e.target.value)}\n        style={{ padding: '5px', width: '200px' }}\n      >\n        <option value=\"\">Sélectionnez une région</option>\n        {regionsGeoJSON.features.map((region) => (\n          <option \n            key={region.properties.nom} \n            value={region.properties.nom}\n          >\n            {region.properties.nom}\n          </option>\n        ))}\n      </select>\n      <button \n        type=\"submit\" \n        disabled={!selectedRegion}\n        style={{ \n          padding: '5px 10px', \n          backgroundColor: selectedRegion ? '#4CAF50' : '#cccccc' \n        }}\n      >\n        Ajouter\n      </button>\n    </form>\n  );\n};\n\nconst RegionStats = () => {\n  const { regions } = useContext(RegionContext);\n  \n  return (\n    <div style={{ \n      marginBottom: '20px', \n      padding: '10px', \n      border: '1px solid #ddd', \n      borderRadius: '5px' \n    }}>\n      <h2>Statistiques des Régions</h2>\n      {Object.entries(regions).length === 0 ? (\n        <p>Aucune région ajoutée</p>\n      ) : (\n        <ul style={{ listStyleType: 'none', padding: 0 }}>\n          {Object.entries(regions).map(([region, count]) => (\n            <li \n              key={region} \n              style={{ \n                display: 'flex', \n                justifyContent: 'space-between', \n                marginBottom: '5px' \n              }}\n            >\n              <span>{region}</span>\n              <span style={{ fontWeight: 'bold' }}>{count}</span>\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n};\n\nconst RegionMap = () => {\n  const { regions } = useContext(RegionContext);\n\n  const getColor = (regionName) => {\n    const count = regions[regionName] || 0;\n    return count > 5 \n      ? '#800026' \n      : count > 3 \n        ? '#BD0026' \n        : count > 1 \n          ? '#FED976' \n          : '#FFEDA0';\n  };\n\n  const onEachFeature = (feature, layer) => {\n    const regionName = feature.properties.nom;\n    const count = regions[regionName] || 0;\n\n    layer.setStyle({ \n      fillColor: getColor(regionName), \n      fillOpacity: 0.7, \n      color: '#000', \n      weight: 1 \n    });\n\n    layer.bindPopup(`\n      <strong>${regionName}</strong><br>\n      Nombre de fois ajouté: ${count}\n    `);\n  };\n\n  return (\n    <MapContainer\n      key=\"france-map\"\n      style={{ height: '500px', width: '800px' }}\n      center={[46.5, 2.5]}\n      zoom={5}\n      maxZoom={10}\n      minZoom={4}\n    >\n      <TileLayer url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\" />\n      <GeoJSON \n        data={regionsGeoJSON} \n        onEachFeature={onEachFeature} \n      />\n    </MapContainer>\n  );\n};\n\nexport default Dashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}