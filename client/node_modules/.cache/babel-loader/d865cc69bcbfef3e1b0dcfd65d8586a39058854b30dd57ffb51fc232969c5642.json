{"ast":null,"code":"var _jsxFileName = \"/Users/JOJO/Documents/devArea/inProgress/mapstats/src/components/Dashboard/index.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nimport React, { useState, useContext, createContext, useMemo } from 'react';\nimport { MapContainer, TileLayer, GeoJSON, Popup } from 'react-leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport regionsGeoJSON from './france-regions.json';\n\n// Contexte pour gérer les régions\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RegionContext = /*#__PURE__*/createContext();\nconst RegionProvider = ({\n  children\n}) => {\n  _s();\n  const [regions, setRegions] = useState({});\n  const incrementRegion = regionName => {\n    setRegions(prev => ({\n      ...prev,\n      [regionName]: (prev[regionName] || 0) + 1\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(RegionContext.Provider, {\n    value: {\n      regions,\n      incrementRegion\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n_s(RegionProvider, \"xjlgFLymkzxRXYwMDrgGLjvXbyw=\");\n_c = RegionProvider;\nconst Dashboard = () => {\n  return /*#__PURE__*/_jsxDEV(RegionProvider, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        fontFamily: 'Arial, sans-serif'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Carte des R\\xE9gions Fran\\xE7aises\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(RegionForm, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(RegionMap, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_c2 = Dashboard;\nconst RegionForm = () => {\n  _s2();\n  const {\n    incrementRegion\n  } = useContext(RegionContext);\n  const [selectedRegion, setSelectedRegion] = useState('');\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (selectedRegion) {\n      incrementRegion(selectedRegion);\n      setSelectedRegion('');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    style: {\n      display: 'flex',\n      gap: '10px',\n      marginBottom: '20px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"select\", {\n      value: selectedRegion,\n      onChange: e => setSelectedRegion(e.target.value),\n      style: {\n        padding: '5px',\n        width: '200px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"S\\xE9lectionnez une r\\xE9gion\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), regionsGeoJSON.features.map(region => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: region.properties.nom,\n        children: region.properties.nom\n      }, region.properties.nom, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      disabled: !selectedRegion,\n      style: {\n        padding: '5px 10px',\n        backgroundColor: selectedRegion ? '#4CAF50' : '#cccccc'\n      },\n      children: \"Ajouter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_s2(RegionForm, \"gY37E84Rwy0ejKDCetyJCXbrvOQ=\");\n_c3 = RegionForm;\nconst RegionMap = () => {\n  _s3();\n  const {\n    regions\n  } = useContext(RegionContext);\n  const getColor = regionName => {\n    const count = regions[regionName] || 0;\n    // Échelle de rouge basée sur le nombre d'ajouts\n    const intensity = Math.min(count * 20, 255); // Limite à 255\n    return `rgb(255, ${255 - intensity}, ${255 - intensity})`;\n  };\n  const onEachFeature = (feature, layer) => {\n    const regionName = feature.properties.nom;\n    const count = regions[regionName] || 0;\n\n    // Style de la région\n    layer.setStyle({\n      fillColor: getColor(regionName),\n      fillOpacity: 0.7,\n      color: '#000',\n      weight: 1\n    });\n\n    // Ajout d'un popup personnalisé\n    const popupContent = `\n      <div style=\"text-align: center;\">\n        <strong>${regionName}</strong><br>\n        Nombre d'ajouts: ${count}\n      </div>\n    `;\n    layer.bindPopup(popupContent);\n  };\n  return /*#__PURE__*/_jsxDEV(MapContainer, {\n    style: {\n      height: '600px',\n      width: '100%',\n      maxWidth: '1000px'\n    },\n    center: [46.5, 2.5],\n    zoom: 5,\n    maxZoom: 10,\n    minZoom: 4,\n    children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n      url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n      attribution: \"\\xA9 <a href=\\\"https://www.openstreetmap.org/copyright\\\">OpenStreetMap</a> contributors\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GeoJSON, {\n      data: regionsGeoJSON,\n      onEachFeature: onEachFeature,\n      style: feature => {\n        const regionName = feature.properties.nom;\n        const count = regions[regionName] || 0;\n        return {\n          fillColor: getColor(regionName),\n          fillOpacity: 0.7,\n          color: '#000',\n          weight: 1\n        };\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this), regionsGeoJSON.features.map(feature => {\n      const regionName = feature.properties.nom;\n      const count = regions[regionName] || 0;\n\n      // Calculer le centre approximatif de la région\n      const coordinates = feature.geometry.coordinates[0];\n      const centerLat = coordinates.reduce((sum, coord) => sum + coord[1], 0) / coordinates.length;\n      const centerLng = coordinates.reduce((sum, coord) => sum + coord[0], 0) / coordinates.length;\n      return count > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: 'absolute',\n          zIndex: 1000,\n          pointerEvents: 'none',\n          transform: 'translate(-50%, -50%)',\n          left: `${(centerLng - 2.5) * 200 + 50}%`,\n          top: `${(46.5 - centerLat) * 200 + 50}%`\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            backgroundColor: 'white',\n            border: '2px solid red',\n            borderRadius: '50%',\n            width: '30px',\n            height: '30px',\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n            fontWeight: 'bold',\n            color: 'red'\n          },\n          children: count\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 13\n        }, this)\n      }, regionName, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 11\n      }, this) : null;\n    })]\n  }, \"france-map\", true, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 5\n  }, this);\n};\n_s3(RegionMap, \"qYstFNDx2xYULkab9qq1nLwgB34=\");\n_c4 = RegionMap;\nexport default Dashboard;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"RegionProvider\");\n$RefreshReg$(_c2, \"Dashboard\");\n$RefreshReg$(_c3, \"RegionForm\");\n$RefreshReg$(_c4, \"RegionMap\");","map":{"version":3,"names":["React","useState","useContext","createContext","useMemo","MapContainer","TileLayer","GeoJSON","Popup","regionsGeoJSON","jsxDEV","_jsxDEV","RegionContext","RegionProvider","children","_s","regions","setRegions","incrementRegion","regionName","prev","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","Dashboard","style","display","flexDirection","alignItems","fontFamily","RegionForm","RegionMap","_c2","_s2","selectedRegion","setSelectedRegion","handleSubmit","e","preventDefault","onSubmit","gap","marginBottom","onChange","target","padding","width","features","map","region","properties","nom","type","disabled","backgroundColor","_c3","_s3","getColor","count","intensity","Math","min","onEachFeature","feature","layer","setStyle","fillColor","fillOpacity","color","weight","popupContent","bindPopup","height","maxWidth","center","zoom","maxZoom","minZoom","url","attribution","data","coordinates","geometry","centerLat","reduce","sum","coord","length","centerLng","position","zIndex","pointerEvents","transform","left","top","border","borderRadius","justifyContent","fontWeight","_c4","$RefreshReg$"],"sources":["/Users/JOJO/Documents/devArea/inProgress/mapstats/src/components/Dashboard/index.jsx"],"sourcesContent":["import React, { useState, useContext, createContext, useMemo } from 'react';\nimport { MapContainer, TileLayer, GeoJSON, Popup } from 'react-leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport regionsGeoJSON from './france-regions.json';\n\n// Contexte pour gérer les régions\nconst RegionContext = createContext();\n\nconst RegionProvider = ({ children }) => {\n  const [regions, setRegions] = useState({});\n  \n  const incrementRegion = (regionName) => {\n    setRegions(prev => ({\n      ...prev,\n      [regionName]: (prev[regionName] || 0) + 1\n    }));\n  };\n  \n  return (\n    <RegionContext.Provider value={{ regions, incrementRegion }}>\n      {children}\n    </RegionContext.Provider>\n  );\n};\n\nconst Dashboard = () => {\n  return (\n    <RegionProvider>\n      <div style={{ \n        display: 'flex', \n        flexDirection: 'column', \n        alignItems: 'center', \n        fontFamily: 'Arial, sans-serif' \n      }}>\n        <h1>Carte des Régions Françaises</h1>\n        <RegionForm />\n        <RegionMap />\n      </div>\n    </RegionProvider>\n  );\n};\n\nconst RegionForm = () => {\n  const { incrementRegion } = useContext(RegionContext);\n  const [selectedRegion, setSelectedRegion] = useState('');\n  \n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (selectedRegion) {\n      incrementRegion(selectedRegion);\n      setSelectedRegion('');\n    }\n  };\n  \n  return (\n    <form \n      onSubmit={handleSubmit} \n      style={{ \n        display: 'flex', \n        gap: '10px', \n        marginBottom: '20px' \n      }}\n    >\n      <select\n        value={selectedRegion}\n        onChange={(e) => setSelectedRegion(e.target.value)}\n        style={{ padding: '5px', width: '200px' }}\n      >\n        <option value=\"\">Sélectionnez une région</option>\n        {regionsGeoJSON.features.map((region) => (\n          <option \n            key={region.properties.nom} \n            value={region.properties.nom}\n          >\n            {region.properties.nom}\n          </option>\n        ))}\n      </select>\n      <button \n        type=\"submit\" \n        disabled={!selectedRegion}\n        style={{ \n          padding: '5px 10px', \n          backgroundColor: selectedRegion ? '#4CAF50' : '#cccccc' \n        }}\n      >\n        Ajouter\n      </button>\n    </form>\n  );\n};\n\nconst RegionMap = () => {\n  const { regions } = useContext(RegionContext);\n\n  const getColor = (regionName) => {\n    const count = regions[regionName] || 0;\n    // Échelle de rouge basée sur le nombre d'ajouts\n    const intensity = Math.min(count * 20, 255); // Limite à 255\n    return `rgb(255, ${255 - intensity}, ${255 - intensity})`;\n  };\n\n  const onEachFeature = (feature, layer) => {\n    const regionName = feature.properties.nom;\n    const count = regions[regionName] || 0;\n\n    // Style de la région\n    layer.setStyle({ \n      fillColor: getColor(regionName), \n      fillOpacity: 0.7, \n      color: '#000', \n      weight: 1 \n    });\n\n    // Ajout d'un popup personnalisé\n    const popupContent = `\n      <div style=\"text-align: center;\">\n        <strong>${regionName}</strong><br>\n        Nombre d'ajouts: ${count}\n      </div>\n    `;\n    layer.bindPopup(popupContent);\n  };\n\n  return (\n    <MapContainer\n      key=\"france-map\"\n      style={{ height: '600px', width: '100%', maxWidth: '1000px' }}\n      center={[46.5, 2.5]}\n      zoom={5}\n      maxZoom={10}\n      minZoom={4}\n    >\n      <TileLayer \n        url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\" \n        attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n      />\n      <GeoJSON \n        data={regionsGeoJSON} \n        onEachFeature={onEachFeature}\n        style={(feature) => {\n          const regionName = feature.properties.nom;\n          const count = regions[regionName] || 0;\n          return {\n            fillColor: getColor(regionName),\n            fillOpacity: 0.7,\n            color: '#000',\n            weight: 1\n          };\n        }}\n      />\n      {/* Ajout des marqueurs de compteur */}\n      {regionsGeoJSON.features.map((feature) => {\n        const regionName = feature.properties.nom;\n        const count = regions[regionName] || 0;\n        \n        // Calculer le centre approximatif de la région\n        const coordinates = feature.geometry.coordinates[0];\n        const centerLat = coordinates.reduce((sum, coord) => sum + coord[1], 0) / coordinates.length;\n        const centerLng = coordinates.reduce((sum, coord) => sum + coord[0], 0) / coordinates.length;\n\n        return count > 0 ? (\n          <div \n            key={regionName} \n            style={{\n              position: 'absolute',\n              zIndex: 1000,\n              pointerEvents: 'none',\n              transform: 'translate(-50%, -50%)',\n              left: `${(centerLng - 2.5) * 200 + 50}%`,\n              top: `${(46.5 - centerLat) * 200 + 50}%`\n            }}\n          >\n            <div style={{\n              backgroundColor: 'white',\n              border: '2px solid red',\n              borderRadius: '50%',\n              width: '30px',\n              height: '30px',\n              display: 'flex',\n              justifyContent: 'center',\n              alignItems: 'center',\n              fontWeight: 'bold',\n              color: 'red'\n            }}>\n              {count}\n            </div>\n          </div>\n        ) : null;\n      })}\n    </MapContainer>\n  );\n};\n\nexport default Dashboard;"],"mappings":";;;;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,UAAU,EAAEC,aAAa,EAAEC,OAAO,QAAQ,OAAO;AAC3E,SAASC,YAAY,EAAEC,SAAS,EAAEC,OAAO,EAAEC,KAAK,QAAQ,eAAe;AACvE,OAAO,0BAA0B;AACjC,OAAOC,cAAc,MAAM,uBAAuB;;AAElD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,aAAa,gBAAGT,aAAa,CAAC,CAAC;AAErC,MAAMU,cAAc,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACvC,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGhB,QAAQ,CAAC,CAAC,CAAC,CAAC;EAE1C,MAAMiB,eAAe,GAAIC,UAAU,IAAK;IACtCF,UAAU,CAACG,IAAI,KAAK;MAClB,GAAGA,IAAI;MACP,CAACD,UAAU,GAAG,CAACC,IAAI,CAACD,UAAU,CAAC,IAAI,CAAC,IAAI;IAC1C,CAAC,CAAC,CAAC;EACL,CAAC;EAED,oBACER,OAAA,CAACC,aAAa,CAACS,QAAQ;IAACC,KAAK,EAAE;MAAEN,OAAO;MAAEE;IAAgB,CAAE;IAAAJ,QAAA,EACzDA;EAAQ;IAAAS,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACa,CAAC;AAE7B,CAAC;AAACX,EAAA,CAfIF,cAAc;AAAAc,EAAA,GAAdd,cAAc;AAiBpB,MAAMe,SAAS,GAAGA,CAAA,KAAM;EACtB,oBACEjB,OAAA,CAACE,cAAc;IAAAC,QAAA,eACbH,OAAA;MAAKkB,KAAK,EAAE;QACVC,OAAO,EAAE,MAAM;QACfC,aAAa,EAAE,QAAQ;QACvBC,UAAU,EAAE,QAAQ;QACpBC,UAAU,EAAE;MACd,CAAE;MAAAnB,QAAA,gBACAH,OAAA;QAAAG,QAAA,EAAI;MAA4B;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACrCf,OAAA,CAACuB,UAAU;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACdf,OAAA,CAACwB,SAAS;QAAAZ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACV;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACQ,CAAC;AAErB,CAAC;AAACU,GAAA,GAfIR,SAAS;AAiBf,MAAMM,UAAU,GAAGA,CAAA,KAAM;EAAAG,GAAA;EACvB,MAAM;IAAEnB;EAAgB,CAAC,GAAGhB,UAAU,CAACU,aAAa,CAAC;EACrD,MAAM,CAAC0B,cAAc,EAAEC,iBAAiB,CAAC,GAAGtC,QAAQ,CAAC,EAAE,CAAC;EAExD,MAAMuC,YAAY,GAAIC,CAAC,IAAK;IAC1BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAIJ,cAAc,EAAE;MAClBpB,eAAe,CAACoB,cAAc,CAAC;MAC/BC,iBAAiB,CAAC,EAAE,CAAC;IACvB;EACF,CAAC;EAED,oBACE5B,OAAA;IACEgC,QAAQ,EAAEH,YAAa;IACvBX,KAAK,EAAE;MACLC,OAAO,EAAE,MAAM;MACfc,GAAG,EAAE,MAAM;MACXC,YAAY,EAAE;IAChB,CAAE;IAAA/B,QAAA,gBAEFH,OAAA;MACEW,KAAK,EAAEgB,cAAe;MACtBQ,QAAQ,EAAGL,CAAC,IAAKF,iBAAiB,CAACE,CAAC,CAACM,MAAM,CAACzB,KAAK,CAAE;MACnDO,KAAK,EAAE;QAAEmB,OAAO,EAAE,KAAK;QAAEC,KAAK,EAAE;MAAQ,CAAE;MAAAnC,QAAA,gBAE1CH,OAAA;QAAQW,KAAK,EAAC,EAAE;QAAAR,QAAA,EAAC;MAAuB;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,EAChDjB,cAAc,CAACyC,QAAQ,CAACC,GAAG,CAAEC,MAAM,iBAClCzC,OAAA;QAEEW,KAAK,EAAE8B,MAAM,CAACC,UAAU,CAACC,GAAI;QAAAxC,QAAA,EAE5BsC,MAAM,CAACC,UAAU,CAACC;MAAG,GAHjBF,MAAM,CAACC,UAAU,CAACC,GAAG;QAAA/B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAIpB,CACT,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACI,CAAC,eACTf,OAAA;MACE4C,IAAI,EAAC,QAAQ;MACbC,QAAQ,EAAE,CAAClB,cAAe;MAC1BT,KAAK,EAAE;QACLmB,OAAO,EAAE,UAAU;QACnBS,eAAe,EAAEnB,cAAc,GAAG,SAAS,GAAG;MAChD,CAAE;MAAAxB,QAAA,EACH;IAED;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEX,CAAC;AAACW,GAAA,CAhDIH,UAAU;AAAAwB,GAAA,GAAVxB,UAAU;AAkDhB,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAwB,GAAA;EACtB,MAAM;IAAE3C;EAAQ,CAAC,GAAGd,UAAU,CAACU,aAAa,CAAC;EAE7C,MAAMgD,QAAQ,GAAIzC,UAAU,IAAK;IAC/B,MAAM0C,KAAK,GAAG7C,OAAO,CAACG,UAAU,CAAC,IAAI,CAAC;IACtC;IACA,MAAM2C,SAAS,GAAGC,IAAI,CAACC,GAAG,CAACH,KAAK,GAAG,EAAE,EAAE,GAAG,CAAC,CAAC,CAAC;IAC7C,OAAO,YAAY,GAAG,GAAGC,SAAS,KAAK,GAAG,GAAGA,SAAS,GAAG;EAC3D,CAAC;EAED,MAAMG,aAAa,GAAGA,CAACC,OAAO,EAAEC,KAAK,KAAK;IACxC,MAAMhD,UAAU,GAAG+C,OAAO,CAACb,UAAU,CAACC,GAAG;IACzC,MAAMO,KAAK,GAAG7C,OAAO,CAACG,UAAU,CAAC,IAAI,CAAC;;IAEtC;IACAgD,KAAK,CAACC,QAAQ,CAAC;MACbC,SAAS,EAAET,QAAQ,CAACzC,UAAU,CAAC;MAC/BmD,WAAW,EAAE,GAAG;MAChBC,KAAK,EAAE,MAAM;MACbC,MAAM,EAAE;IACV,CAAC,CAAC;;IAEF;IACA,MAAMC,YAAY,GAAG;AACzB;AACA,kBAAkBtD,UAAU;AAC5B,2BAA2B0C,KAAK;AAChC;AACA,KAAK;IACDM,KAAK,CAACO,SAAS,CAACD,YAAY,CAAC;EAC/B,CAAC;EAED,oBACE9D,OAAA,CAACN,YAAY;IAEXwB,KAAK,EAAE;MAAE8C,MAAM,EAAE,OAAO;MAAE1B,KAAK,EAAE,MAAM;MAAE2B,QAAQ,EAAE;IAAS,CAAE;IAC9DC,MAAM,EAAE,CAAC,IAAI,EAAE,GAAG,CAAE;IACpBC,IAAI,EAAE,CAAE;IACRC,OAAO,EAAE,EAAG;IACZC,OAAO,EAAE,CAAE;IAAAlE,QAAA,gBAEXH,OAAA,CAACL,SAAS;MACR2E,GAAG,EAAC,oDAAoD;MACxDC,WAAW,EAAC;IAAyF;MAAA3D,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtG,CAAC,eACFf,OAAA,CAACJ,OAAO;MACN4E,IAAI,EAAE1E,cAAe;MACrBwD,aAAa,EAAEA,aAAc;MAC7BpC,KAAK,EAAGqC,OAAO,IAAK;QAClB,MAAM/C,UAAU,GAAG+C,OAAO,CAACb,UAAU,CAACC,GAAG;QACzC,MAAMO,KAAK,GAAG7C,OAAO,CAACG,UAAU,CAAC,IAAI,CAAC;QACtC,OAAO;UACLkD,SAAS,EAAET,QAAQ,CAACzC,UAAU,CAAC;UAC/BmD,WAAW,EAAE,GAAG;UAChBC,KAAK,EAAE,MAAM;UACbC,MAAM,EAAE;QACV,CAAC;MACH;IAAE;MAAAjD,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,EAEDjB,cAAc,CAACyC,QAAQ,CAACC,GAAG,CAAEe,OAAO,IAAK;MACxC,MAAM/C,UAAU,GAAG+C,OAAO,CAACb,UAAU,CAACC,GAAG;MACzC,MAAMO,KAAK,GAAG7C,OAAO,CAACG,UAAU,CAAC,IAAI,CAAC;;MAEtC;MACA,MAAMiE,WAAW,GAAGlB,OAAO,CAACmB,QAAQ,CAACD,WAAW,CAAC,CAAC,CAAC;MACnD,MAAME,SAAS,GAAGF,WAAW,CAACG,MAAM,CAAC,CAACC,GAAG,EAAEC,KAAK,KAAKD,GAAG,GAAGC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,GAAGL,WAAW,CAACM,MAAM;MAC5F,MAAMC,SAAS,GAAGP,WAAW,CAACG,MAAM,CAAC,CAACC,GAAG,EAAEC,KAAK,KAAKD,GAAG,GAAGC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,GAAGL,WAAW,CAACM,MAAM;MAE5F,OAAO7B,KAAK,GAAG,CAAC,gBACdlD,OAAA;QAEEkB,KAAK,EAAE;UACL+D,QAAQ,EAAE,UAAU;UACpBC,MAAM,EAAE,IAAI;UACZC,aAAa,EAAE,MAAM;UACrBC,SAAS,EAAE,uBAAuB;UAClCC,IAAI,EAAE,GAAG,CAACL,SAAS,GAAG,GAAG,IAAI,GAAG,GAAG,EAAE,GAAG;UACxCM,GAAG,EAAE,GAAG,CAAC,IAAI,GAAGX,SAAS,IAAI,GAAG,GAAG,EAAE;QACvC,CAAE;QAAAxE,QAAA,eAEFH,OAAA;UAAKkB,KAAK,EAAE;YACV4B,eAAe,EAAE,OAAO;YACxByC,MAAM,EAAE,eAAe;YACvBC,YAAY,EAAE,KAAK;YACnBlD,KAAK,EAAE,MAAM;YACb0B,MAAM,EAAE,MAAM;YACd7C,OAAO,EAAE,MAAM;YACfsE,cAAc,EAAE,QAAQ;YACxBpE,UAAU,EAAE,QAAQ;YACpBqE,UAAU,EAAE,MAAM;YAClB9B,KAAK,EAAE;UACT,CAAE;UAAAzD,QAAA,EACC+C;QAAK;UAAAtC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH;MAAC,GAvBDP,UAAU;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAwBZ,CAAC,GACJ,IAAI;IACV,CAAC,CAAC;EAAA,GA/DE,YAAY;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAgEJ,CAAC;AAEnB,CAAC;AAACiC,GAAA,CApGIxB,SAAS;AAAAmE,GAAA,GAATnE,SAAS;AAsGf,eAAeP,SAAS;AAAC,IAAAD,EAAA,EAAAS,GAAA,EAAAsB,GAAA,EAAA4C,GAAA;AAAAC,YAAA,CAAA5E,EAAA;AAAA4E,YAAA,CAAAnE,GAAA;AAAAmE,YAAA,CAAA7C,GAAA;AAAA6C,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}