{"ast":null,"code":"var _jsxFileName = \"/Users/JOJO/Documents/devArea/inProgress/mapstats/src/App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nimport React, { useState, useContext, createContext } from \"react\";\nimport France from \"@socialgouv/react-departements\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DEPARTEMENTS_ILE_DE_FRANCE = [\"75\",\n// Paris\n\"77\",\n// Seine-et-Marne\n\"78\",\n// Yvelines\n\"91\",\n// Essonne\n\"92\",\n// Hauts-de-Seine\n\"93\",\n// Seine-Saint-Denis\n\"94\",\n// Val-de-Marne\n\"95\" // Val-d'Oise\n];\n\n// Crée le contexte\nconst EntreprisesContext = /*#__PURE__*/createContext();\n\n// Fournisseur du contexte\nfunction EntreprisesProvider({\n  children\n}) {\n  _s();\n  const [entreprises, setEntreprises] = useState([]);\n  const ajouterEntreprise = entreprise => {\n    setEntreprises(prev => [...prev, entreprise]);\n  };\n  return /*#__PURE__*/_jsxDEV(EntreprisesContext.Provider, {\n    value: {\n      entreprises,\n      ajouterEntreprise\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n\n// Custom Hook pour accéder au contexte\n_s(EntreprisesProvider, \"l1MLvY5ZbpJo/ef0R9NSn2tuxZo=\");\n_c = EntreprisesProvider;\nfunction useEntreprises() {\n  _s2();\n  return useContext(EntreprisesContext);\n}\n\n// Composant principal\n_s2(useEntreprises, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nfunction App() {\n  _s3();\n  const [formData, setFormData] = useState({\n    nom: \"\",\n    poste: \"\",\n    ville: \"\",\n    departement: \"\"\n  });\n  const {\n    entreprises,\n    ajouterEntreprise\n  } = useEntreprises();\n\n  // Gestion du formulaire\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n\n  // Détecter le département via une API (exemple : GeoAPI Gouv)\n  const detecterDepartement = async ville => {\n    try {\n      const response = await fetch(`https://geo.api.gouv.fr/communes?nom=${ville}&fields=nom,codeDepartement`);\n      const data = await response.json();\n      if (data.length > 0) {\n        // Filtrer les résultats pour trouver une correspondance exacte\n        const villeExacte = data.find(commune => commune.nom.toLowerCase() === ville.toLowerCase());\n        let departementCode = villeExacte ? villeExacte.codeDepartement : data[0].codeDepartement;\n\n        // Si le département est dans Paris ou petite couronne,\n        // retourner tous les départements d'Île-de-France\n        return [\"75\", \"92\", \"93\", \"94\"].includes(departementCode) ? DEPARTEMENTS_ILE_DE_FRANCE : departementCode;\n      }\n      return \"\";\n    } catch (error) {\n      console.error(\"Erreur lors de la détection du département :\", error);\n      return \"\";\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const departement = await detecterDepartement(formData.ville);\n    if (departement) {\n      const departements = Array.isArray(departement) ? departement : [departement];\n      const nouvelleEntreprise = {\n        nom: formData.nom,\n        poste: formData.poste,\n        ville: formData.ville,\n        departement: departements[0] // Garder le premier département pour l'affichage\n      };\n      ajouterEntreprise(nouvelleEntreprise);\n\n      // Réinitialiser le formulaire\n      setFormData({\n        nom: \"\",\n        poste: \"\",\n        ville: \"\",\n        departement: \"\"\n      });\n    } else {\n      alert(\"Impossible de détecter le département pour cette ville.\");\n    }\n  };\n\n  // Calcul du nombre d'entreprises par département\n  const entreprisesParDepartement = entreprises.reduce((acc, entreprise) => {\n    acc[entreprise.departement] = (acc[entreprise.departement] || 0) + 1;\n    return acc;\n  }, {});\n\n  // Obtenir les départements uniques avec gestion spéciale pour l'Île-de-France\n  const departementsPourCarte = [...new Set(Object.keys(entreprisesParDepartement))];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Ma carte interactive\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(France, {\n        departements: departementsPourCarte,\n        selectedDepartments: [\"75\", \"92\", \"93\", \"94\"],\n        selectedColor: \"#007bff\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Nom de l'entreprise :\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"nom\",\n            value: formData.nom,\n            onChange: handleChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Ville :\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"ville\",\n            value: formData.ville,\n            onChange: handleChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Poste :\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"poste\",\n            value: formData.poste,\n            onChange: handleChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Ajouter\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Entreprises enregistr\\xE9es\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Nom\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Ville\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Poste\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"D\\xE9partement\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: entreprises.map((entreprise, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: entreprise.nom\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: entreprise.ville\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: entreprise.poste\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: entreprise.departement + \" (\" + entreprisesParDepartement[entreprise.departement] + \")\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 121,\n    columnNumber: 5\n  }, this);\n}\n\n// Encapsuler l'application avec le fournisseur du contexte\n_s3(App, \"etsayMXyDVbnEUViKViC1cgmCVo=\", false, function () {\n  return [useEntreprises];\n});\n_c2 = App;\nexport default function AppWrapper() {\n  return /*#__PURE__*/_jsxDEV(EntreprisesProvider, {\n    children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 202,\n    columnNumber: 5\n  }, this);\n}\n_c3 = AppWrapper;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"EntreprisesProvider\");\n$RefreshReg$(_c2, \"App\");\n$RefreshReg$(_c3, \"AppWrapper\");","map":{"version":3,"names":["React","useState","useContext","createContext","France","jsxDEV","_jsxDEV","DEPARTEMENTS_ILE_DE_FRANCE","EntreprisesContext","EntreprisesProvider","children","_s","entreprises","setEntreprises","ajouterEntreprise","entreprise","prev","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useEntreprises","_s2","App","_s3","formData","setFormData","nom","poste","ville","departement","handleChange","e","name","target","detecterDepartement","response","fetch","data","json","length","villeExacte","find","commune","toLowerCase","departementCode","codeDepartement","includes","error","console","handleSubmit","preventDefault","departements","Array","isArray","nouvelleEntreprise","alert","entreprisesParDepartement","reduce","acc","departementsPourCarte","Set","Object","keys","className","selectedDepartments","selectedColor","onSubmit","type","onChange","required","map","index","_c2","AppWrapper","_c3","$RefreshReg$"],"sources":["/Users/JOJO/Documents/devArea/inProgress/mapstats/src/App.js"],"sourcesContent":["import React, { useState, useContext, createContext } from \"react\";\nimport France from \"@socialgouv/react-departements\";\n\nconst DEPARTEMENTS_ILE_DE_FRANCE = [\n  \"75\", // Paris\n  \"77\", // Seine-et-Marne\n  \"78\", // Yvelines\n  \"91\", // Essonne\n  \"92\", // Hauts-de-Seine\n  \"93\", // Seine-Saint-Denis\n  \"94\", // Val-de-Marne\n  \"95\", // Val-d'Oise\n];\n\n// Crée le contexte\nconst EntreprisesContext = createContext();\n\n// Fournisseur du contexte\nfunction EntreprisesProvider({ children }) {\n  const [entreprises, setEntreprises] = useState([]);\n\n  const ajouterEntreprise = (entreprise) => {\n    setEntreprises((prev) => [...prev, entreprise]);\n  };\n\n  return (\n    <EntreprisesContext.Provider value={{ entreprises, ajouterEntreprise }}>\n      {children}\n    </EntreprisesContext.Provider>\n  );\n}\n\n// Custom Hook pour accéder au contexte\nfunction useEntreprises() {\n  return useContext(EntreprisesContext);\n}\n\n// Composant principal\nfunction App() {\n  const [formData, setFormData] = useState({\n    nom: \"\",\n    poste: \"\",\n    ville: \"\",\n    departement: \"\",\n  });\n  const { entreprises, ajouterEntreprise } = useEntreprises();\n\n  // Gestion du formulaire\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormData((prev) => ({ ...prev, [name]: value }));\n  };\n\n  // Détecter le département via une API (exemple : GeoAPI Gouv)\n  const detecterDepartement = async (ville) => {\n    try {\n      const response = await fetch(\n        `https://geo.api.gouv.fr/communes?nom=${ville}&fields=nom,codeDepartement`\n      );\n      const data = await response.json();\n      if (data.length > 0) {\n        // Filtrer les résultats pour trouver une correspondance exacte\n        const villeExacte = data.find(\n          (commune) => commune.nom.toLowerCase() === ville.toLowerCase()\n        );\n\n        let departementCode = villeExacte\n          ? villeExacte.codeDepartement\n          : data[0].codeDepartement;\n\n        // Si le département est dans Paris ou petite couronne,\n        // retourner tous les départements d'Île-de-France\n        return [\"75\", \"92\", \"93\", \"94\"].includes(departementCode)\n          ? DEPARTEMENTS_ILE_DE_FRANCE\n          : departementCode;\n      }\n      return \"\";\n    } catch (error) {\n      console.error(\"Erreur lors de la détection du département :\", error);\n      return \"\";\n    }\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const departement = await detecterDepartement(formData.ville);\n\n    if (departement) {\n      const departements = Array.isArray(departement)\n        ? departement\n        : [departement];\n\n      const nouvelleEntreprise = {\n        nom: formData.nom,\n        poste: formData.poste,\n        ville: formData.ville,\n        departement: departements[0], // Garder le premier département pour l'affichage\n      };\n\n      ajouterEntreprise(nouvelleEntreprise);\n\n      // Réinitialiser le formulaire\n      setFormData({ nom: \"\", poste: \"\", ville: \"\", departement: \"\" });\n    } else {\n      alert(\"Impossible de détecter le département pour cette ville.\");\n    }\n  };\n\n  // Calcul du nombre d'entreprises par département\n  const entreprisesParDepartement = entreprises.reduce((acc, entreprise) => {\n    acc[entreprise.departement] = (acc[entreprise.departement] || 0) + 1;\n    return acc;\n  }, {});\n\n  // Obtenir les départements uniques avec gestion spéciale pour l'Île-de-France\n  const departementsPourCarte = [\n    ...new Set(Object.keys(entreprisesParDepartement)),\n  ];\n\n  return (\n    <div className=\"App\">\n      <section>\n        <h1>Ma carte interactive</h1>\n        <France\n          departements={departementsPourCarte}\n          selectedDepartments={[\"75\", \"92\", \"93\", \"94\"]}\n          selectedColor=\"#007bff\"\n        />\n      </section>{\" \"}\n      <section>\n        <form onSubmit={handleSubmit}>\n          <div>\n            <label>Nom de l'entreprise :</label>\n            <input\n              type=\"text\"\n              name=\"nom\"\n              value={formData.nom}\n              onChange={handleChange}\n              required\n            />\n          </div>\n\n          <div>\n            <label>Ville :</label>\n            <input\n              type=\"text\"\n              name=\"ville\"\n              value={formData.ville}\n              onChange={handleChange}\n              required\n            />\n          </div>\n\n          <div>\n            <label>Poste :</label>\n            <input\n              type=\"text\"\n              name=\"poste\"\n              value={formData.poste}\n              onChange={handleChange}\n              required\n            />\n          </div>\n\n          <button type=\"submit\">Ajouter</button>\n        </form>\n\n        <h2>Entreprises enregistrées</h2>\n        <table>\n          <thead>\n            <tr>\n              <th>Nom</th>\n              <th>Ville</th>\n              <th>Poste</th>\n              <th>Département</th>\n            </tr>\n          </thead>\n          <tbody>\n            {entreprises.map((entreprise, index) => (\n              <tr key={index}>\n                <td>{entreprise.nom}</td>\n                <td>{entreprise.ville}</td>\n                <td>{entreprise.poste}</td>\n                <td>\n                  {entreprise.departement +\n                    \" (\" +\n                    entreprisesParDepartement[entreprise.departement] +\n                    \")\"}\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </section>\n    </div>\n  );\n}\n\n// Encapsuler l'application avec le fournisseur du contexte\nexport default function AppWrapper() {\n  return (\n    <EntreprisesProvider>\n      <App />\n    </EntreprisesProvider>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}