{"ast":null,"code":"var _jsxFileName = \"/Users/JOJO/Documents/devArea/inProgress/mapstats/client/src/components/ApplicationHeatMap/index.jsx\",\n  _s = $RefreshSig$();\nimport React, { useMemo } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ApplicationHeatmap = ({\n  applications\n}) => {\n  _s();\n  // Formater la date en français\n  const formatDate = date => {\n    return new Intl.DateTimeFormat('fr-FR', {\n      day: 'numeric',\n      month: 'long',\n      year: 'numeric'\n    }).format(date);\n  };\n\n  // Formater le mois en français\n  const formatMonth = date => {\n    return new Intl.DateTimeFormat('fr-FR', {\n      month: 'short'\n    }).format(date);\n  };\n\n  // Obtenir la date au format YYYY-MM-DD\n  const getDateString = date => {\n    return date.toISOString().split('T')[0];\n  };\n\n  // Calculer la plage de dates (1 an)\n  const endDate = new Date();\n  const startDate = new Date();\n  startDate.setFullYear(endDate.getFullYear() - 1);\n\n  // Générer toutes les dates de l'intervalle\n  const generateDates = (start, end) => {\n    const dates = [];\n    const current = new Date(start);\n    while (current <= end) {\n      dates.push(new Date(current));\n      current.setDate(current.getDate() + 1);\n    }\n    return dates;\n  };\n\n  // Grouper les candidatures par date\n  const applicationsByDate = useMemo(() => {\n    const grouped = {};\n    applications.forEach(app => {\n      const date = getDateString(new Date(app.dateCreation.$date));\n      grouped[date] = (grouped[date] || 0) + 1;\n    });\n    return grouped;\n  }, [applications]);\n\n  // Obtenir le nombre maximum de candidatures en une journée\n  const maxApplications = Math.max(...Object.values(applicationsByDate), 1);\n\n  // Générer toutes les dates\n  const allDates = generateDates(startDate, endDate);\n\n  // Fonction pour déterminer la couleur en fonction du nombre de candidatures\n  const getColor = count => {\n    if (count === 0) return 'bg-gray-100';\n    const intensity = count / maxApplications * 100;\n    if (intensity <= 25) return 'bg-green-100';\n    if (intensity <= 50) return 'bg-green-300';\n    if (intensity <= 75) return 'bg-green-500';\n    return 'bg-green-700';\n  };\n\n  // Grouper les dates par semaine\n  const weeks = [];\n  let currentWeek = [];\n  allDates.forEach(date => {\n    if (currentWeek.length === 7) {\n      weeks.push(currentWeek);\n      currentWeek = [];\n    }\n    currentWeek.push(date);\n  });\n  if (currentWeek.length > 0) {\n    weeks.push(currentWeek);\n  }\n  const JOURS = ['Lun', 'Mar', 'Mer', 'Jeu', 'Ven', 'Sam', 'Dim'];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col gap-1\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex gap-1 ml-8\",\n        children: JOURS.map(day => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-4 text-xs text-gray-500\",\n          children: day\n        }, day, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-col gap-1\",\n        children: weeks.map((week, weekIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex gap-1\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"w-8 text-xs text-gray-500 flex items-center\",\n            children: week[0] && week[0].getDate() <= 7 && formatMonth(week[0])\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 15\n          }, this), week.map(date => {\n            const dateStr = getDateString(date);\n            const count = applicationsByDate[dateStr] || 0;\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `w-4 h-4 rounded-sm ${getColor(count)} cursor-pointer transition-colors duration-200`,\n              title: `${formatDate(date)}\n${count} candidature${count > 1 ? 's' : ''}`\n            }, dateStr, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 19\n            }, this);\n          })]\n        }, weekIndex, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center gap-2 mt-4 text-sm text-gray-600\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Moins\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex gap-1\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-4 h-4 rounded-sm bg-gray-100\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-4 h-4 rounded-sm bg-green-100\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-4 h-4 rounded-sm bg-green-300\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-4 h-4 rounded-sm bg-green-500\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-4 h-4 rounded-sm bg-green-700\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Plus\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n};\n_s(ApplicationHeatmap, \"hGXy/HrChcVwDgxeegkzXLs4XuE=\");\n_c = ApplicationHeatmap;\nexport default ApplicationHeatmap;\nvar _c;\n$RefreshReg$(_c, \"ApplicationHeatmap\");","map":{"version":3,"names":["React","useMemo","jsxDEV","_jsxDEV","ApplicationHeatmap","applications","_s","formatDate","date","Intl","DateTimeFormat","day","month","year","format","formatMonth","getDateString","toISOString","split","endDate","Date","startDate","setFullYear","getFullYear","generateDates","start","end","dates","current","push","setDate","getDate","applicationsByDate","grouped","forEach","app","dateCreation","$date","maxApplications","Math","max","Object","values","allDates","getColor","count","intensity","weeks","currentWeek","length","JOURS","className","children","map","fileName","_jsxFileName","lineNumber","columnNumber","week","weekIndex","dateStr","title","_c","$RefreshReg$"],"sources":["/Users/JOJO/Documents/devArea/inProgress/mapstats/client/src/components/ApplicationHeatMap/index.jsx"],"sourcesContent":["import React, { useMemo } from 'react';\n\nconst ApplicationHeatmap = ({ applications }) => {\n  // Formater la date en français\n  const formatDate = (date) => {\n    return new Intl.DateTimeFormat('fr-FR', {\n      day: 'numeric',\n      month: 'long',\n      year: 'numeric'\n    }).format(date);\n  };\n\n  // Formater le mois en français\n  const formatMonth = (date) => {\n    return new Intl.DateTimeFormat('fr-FR', {\n      month: 'short'\n    }).format(date);\n  };\n\n  // Obtenir la date au format YYYY-MM-DD\n  const getDateString = (date) => {\n    return date.toISOString().split('T')[0];\n  };\n\n  // Calculer la plage de dates (1 an)\n  const endDate = new Date();\n  const startDate = new Date();\n  startDate.setFullYear(endDate.getFullYear() - 1);\n\n  // Générer toutes les dates de l'intervalle\n  const generateDates = (start, end) => {\n    const dates = [];\n    const current = new Date(start);\n    while (current <= end) {\n      dates.push(new Date(current));\n      current.setDate(current.getDate() + 1);\n    }\n    return dates;\n  };\n\n  // Grouper les candidatures par date\n  const applicationsByDate = useMemo(() => {\n    const grouped = {};\n    applications.forEach(app => {\n      const date = getDateString(new Date(app.dateCreation.$date));\n      grouped[date] = (grouped[date] || 0) + 1;\n    });\n    return grouped;\n  }, [applications]);\n\n  // Obtenir le nombre maximum de candidatures en une journée\n  const maxApplications = Math.max(...Object.values(applicationsByDate), 1);\n\n  // Générer toutes les dates\n  const allDates = generateDates(startDate, endDate);\n\n  // Fonction pour déterminer la couleur en fonction du nombre de candidatures\n  const getColor = (count) => {\n    if (count === 0) return 'bg-gray-100';\n    const intensity = (count / maxApplications) * 100;\n    if (intensity <= 25) return 'bg-green-100';\n    if (intensity <= 50) return 'bg-green-300';\n    if (intensity <= 75) return 'bg-green-500';\n    return 'bg-green-700';\n  };\n\n  // Grouper les dates par semaine\n  const weeks = [];\n  let currentWeek = [];\n  \n  allDates.forEach(date => {\n    if (currentWeek.length === 7) {\n      weeks.push(currentWeek);\n      currentWeek = [];\n    }\n    currentWeek.push(date);\n  });\n  if (currentWeek.length > 0) {\n    weeks.push(currentWeek);\n  }\n\n  const JOURS = ['Lun', 'Mar', 'Mer', 'Jeu', 'Ven', 'Sam', 'Dim'];\n\n  return (\n    <div className=\"p-4\">\n      <div className=\"flex flex-col gap-1\">\n        {/* En-tête des jours */}\n        <div className=\"flex gap-1 ml-8\">\n          {JOURS.map(day => (\n            <div key={day} className=\"w-4 text-xs text-gray-500\">\n              {day}\n            </div>\n          ))}\n        </div>\n        \n        {/* Grille des contributions */}\n        <div className=\"flex flex-col gap-1\">\n          {weeks.map((week, weekIndex) => (\n            <div key={weekIndex} className=\"flex gap-1\">\n              {/* Afficher le mois au début de chaque semaine */}\n              <div className=\"w-8 text-xs text-gray-500 flex items-center\">\n                {week[0] && week[0].getDate() <= 7 && formatMonth(week[0])}\n              </div>\n              {week.map(date => {\n                const dateStr = getDateString(date);\n                const count = applicationsByDate[dateStr] || 0;\n                return (\n                  <div\n                    key={dateStr}\n                    className={`w-4 h-4 rounded-sm ${getColor(count)} cursor-pointer transition-colors duration-200`}\n                    title={`${formatDate(date)}\n${count} candidature${count > 1 ? 's' : ''}`}\n                  />\n                );\n              })}\n            </div>\n          ))}\n        </div>\n      </div>\n      \n      {/* Légende */}\n      <div className=\"flex items-center gap-2 mt-4 text-sm text-gray-600\">\n        <span>Moins</span>\n        <div className=\"flex gap-1\">\n          <div className=\"w-4 h-4 rounded-sm bg-gray-100\" />\n          <div className=\"w-4 h-4 rounded-sm bg-green-100\" />\n          <div className=\"w-4 h-4 rounded-sm bg-green-300\" />\n          <div className=\"w-4 h-4 rounded-sm bg-green-500\" />\n          <div className=\"w-4 h-4 rounded-sm bg-green-700\" />\n        </div>\n        <span>Plus</span>\n      </div>\n    </div>\n  );\n};\n\nexport default ApplicationHeatmap;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}