{"ast":null,"code":"// src/redux/features/companiesSlice.js\nimport { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nconst API_URL = \"http://localhost:5001/api/companies\";\n\n// Thunks\nexport const fetchCompanies = createAsyncThunk(\"companies/fetchCompanies\", async () => {\n  const response = await axios.get(API_URL);\n  return response.data;\n});\nexport const addCompany = createAsyncThunk(\"companies/addCompany\", async company => {\n  const response = await axios.post(API_URL, company);\n  return response.data;\n});\nexport const updateCompany = createAsyncThunk(\"companies/updateCompany\", async ({\n  id,\n  company\n}) => {\n  const response = await axios.put(`${API_URL}/${id}`, company);\n  return response.data;\n});\nexport const deleteCompany = createAsyncThunk(\"companies/deleteCompany\", async id => {\n  await axios.delete(`${API_URL}/${id}`);\n  return id;\n});\n\n// Slice\nconst companiesSlice = createSlice({\n  name: \"companies\",\n  initialState: {\n    items: [],\n    status: \"idle\",\n    // 'idle' | 'loading' | 'succeeded' | 'failed'\n    error: null\n  },\n  reducers: {},\n  extraReducers: builder => {\n    builder\n    // Fetch companies\n    .addCase(fetchCompanies.pending, state => {\n      state.status = \"loading\";\n    }).addCase(fetchCompanies.fulfilled, (state, action) => {\n      state.status = \"succeeded\";\n      state.items = action.payload;\n    }).addCase(fetchCompanies.rejected, (state, action) => {\n      state.status = \"failed\";\n      state.error = action.error.message;\n    })\n    // Add company\n    .addCase(addCompany.fulfilled, (state, action) => {\n      state.items.push(action.payload);\n    })\n    // Update company\n    .addCase(updateCompany.fulfilled, (state, action) => {\n      const index = state.items.findIndex(company => company._id === action.payload._id);\n      if (index !== -1) {\n        state.items[index] = action.payload;\n      }\n    })\n    // Delete company\n    .addCase(deleteCompany.fulfilled, (state, action) => {\n      state.items = state.items.filter(company => company._id !== action.payload);\n    });\n  }\n});\nexport default companiesSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","API_URL","fetchCompanies","response","get","data","addCompany","company","post","updateCompany","id","put","deleteCompany","delete","companiesSlice","name","initialState","items","status","error","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","rejected","message","push","index","findIndex","_id","filter","reducer"],"sources":["/Users/JOJO/Documents/devArea/inProgress/mapstats/client/src/redux/features/companiesSlice.js"],"sourcesContent":["// src/redux/features/companiesSlice.js\nimport { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\n\nconst API_URL = \"http://localhost:5001/api/companies\";\n\n// Thunks\nexport const fetchCompanies = createAsyncThunk(\n  \"companies/fetchCompanies\",\n  async () => {\n    const response = await axios.get(API_URL);\n    return response.data;\n  }\n);\n\nexport const addCompany = createAsyncThunk(\n  \"companies/addCompany\",\n  async (company) => {\n    const response = await axios.post(API_URL, company);\n    return response.data;\n  }\n);\n\nexport const updateCompany = createAsyncThunk(\n  \"companies/updateCompany\",\n  async ({ id, company }) => {\n    const response = await axios.put(`${API_URL}/${id}`, company);\n    return response.data;\n  }\n);\n\nexport const deleteCompany = createAsyncThunk(\n  \"companies/deleteCompany\",\n  async (id) => {\n    await axios.delete(`${API_URL}/${id}`);\n    return id;\n  }\n);\n\n// Slice\nconst companiesSlice = createSlice({\n  name: \"companies\",\n  initialState: {\n    items: [],\n    status: \"idle\", // 'idle' | 'loading' | 'succeeded' | 'failed'\n    error: null,\n  },\n  reducers: {},\n  extraReducers: (builder) => {\n    builder\n      // Fetch companies\n      .addCase(fetchCompanies.pending, (state) => {\n        state.status = \"loading\";\n      })\n      .addCase(fetchCompanies.fulfilled, (state, action) => {\n        state.status = \"succeeded\";\n        state.items = action.payload;\n      })\n      .addCase(fetchCompanies.rejected, (state, action) => {\n        state.status = \"failed\";\n        state.error = action.error.message;\n      })\n      // Add company\n      .addCase(addCompany.fulfilled, (state, action) => {\n        state.items.push(action.payload);\n      })\n      // Update company\n      .addCase(updateCompany.fulfilled, (state, action) => {\n        const index = state.items.findIndex(\n          (company) => company._id === action.payload._id\n        );\n        if (index !== -1) {\n          state.items[index] = action.payload;\n        }\n      })\n      // Delete company\n      .addCase(deleteCompany.fulfilled, (state, action) => {\n        state.items = state.items.filter(\n          (company) => company._id !== action.payload\n        );\n      });\n  },\n});\n\nexport default companiesSlice.reducer;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}