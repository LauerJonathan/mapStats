{"ast":null,"code":"var _jsxFileName = \"/Users/JOJO/Documents/devArea/inProgress/mapstats/src/components/Dashboard/index.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nimport React, { useState, useContext, createContext } from 'react';\nimport { MapContainer, TileLayer, GeoJSON, Marker, Popup } from 'react-leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport regionsGeoJSON from './france-regions.json';\n\n// Contexte pour gérer les régions\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RegionContext = /*#__PURE__*/createContext();\nconst RegionProvider = ({\n  children\n}) => {\n  _s();\n  const [regions, setRegions] = useState({});\n  const incrementRegion = regionName => {\n    setRegions(prev => ({\n      ...prev,\n      [regionName]: (prev[regionName] || 0) + 1\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(RegionContext.Provider, {\n    value: {\n      regions,\n      incrementRegion\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n_s(RegionProvider, \"xjlgFLymkzxRXYwMDrgGLjvXbyw=\");\n_c = RegionProvider;\nconst Dashboard = () => {\n  return /*#__PURE__*/_jsxDEV(RegionProvider, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        fontFamily: 'Arial, sans-serif'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Carte des R\\xE9gions Fran\\xE7aises\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(RegionForm, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(RegionMap, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_c2 = Dashboard;\nconst RegionForm = () => {\n  _s2();\n  const {\n    incrementRegion\n  } = useContext(RegionContext);\n  const [selectedRegion, setSelectedRegion] = useState('');\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (selectedRegion) {\n      incrementRegion(selectedRegion);\n      setSelectedRegion('');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    style: {\n      display: 'flex',\n      gap: '10px',\n      marginBottom: '20px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"select\", {\n      value: selectedRegion,\n      onChange: e => setSelectedRegion(e.target.value),\n      style: {\n        padding: '5px',\n        width: '200px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"S\\xE9lectionnez une r\\xE9gion\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), regionsGeoJSON.features.map(region => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: region.properties.nom,\n        children: region.properties.nom\n      }, region.properties.nom, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      disabled: !selectedRegion,\n      style: {\n        padding: '5px 10px',\n        backgroundColor: selectedRegion ? '#4CAF50' : '#cccccc'\n      },\n      children: \"Ajouter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n_s2(RegionForm, \"gY37E84Rwy0ejKDCetyJCXbrvOQ=\");\n_c3 = RegionForm;\nconst RegionMap = () => {\n  _s3();\n  const {\n    regions\n  } = useContext(RegionContext);\n  const getColor = regionName => {\n    const count = regions[regionName] || 0;\n    const intensity = Math.min(count * 20, 255); // Limite à 255\n    return `rgb(255, ${255 - intensity}, ${255 - intensity})`;\n  };\n  const onEachFeature = (feature, layer) => {\n    const regionName = feature.properties.nom;\n    const count = regions[regionName] || 0;\n    layer.setStyle({\n      fillColor: getColor(regionName),\n      fillOpacity: 0.7,\n      color: '#000',\n      weight: 1\n    });\n    const popupContent = `\n      <div style=\"text-align: center;\">\n        <strong>${regionName}</strong><br>\n        Nombre d'ajouts: ${count}\n      </div>\n    `;\n    layer.bindPopup(popupContent);\n  };\n  return /*#__PURE__*/_jsxDEV(MapContainer, {\n    style: {\n      height: '600px',\n      width: '100%',\n      maxWidth: '1000px'\n    },\n    center: [46.5, 2.5],\n    zoom: 5,\n    maxZoom: 10,\n    minZoom: 4,\n    children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n      url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n      attribution: \"\\xA9 <a href=\\\"https://www.openstreetmap.org/copyright\\\">OpenStreetMap</a> contributors\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GeoJSON, {\n      data: regionsGeoJSON,\n      onEachFeature: onEachFeature\n    }, JSON.stringify(regions), false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this), regionsGeoJSON.features.map(feature => {\n      const regionName = feature.properties.nom;\n      const count = regions[regionName] || 0;\n      if (count > 0) {\n        const center = feature.geometry.coordinates[0][0]; // Simplification, utilisez turf.js pour plus de précision\n        return /*#__PURE__*/_jsxDEV(Marker, {\n          position: [center[1], center[0]],\n          children: /*#__PURE__*/_jsxDEV(Popup, {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: regionName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 17\n            }, this), \": \", count]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 15\n          }, this)\n        }, regionName, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 13\n        }, this);\n      }\n      return null;\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 5\n  }, this);\n};\n_s3(RegionMap, \"qYstFNDx2xYULkab9qq1nLwgB34=\");\n_c4 = RegionMap;\nexport default Dashboard;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"RegionProvider\");\n$RefreshReg$(_c2, \"Dashboard\");\n$RefreshReg$(_c3, \"RegionForm\");\n$RefreshReg$(_c4, \"RegionMap\");","map":{"version":3,"names":["React","useState","useContext","createContext","MapContainer","TileLayer","GeoJSON","Marker","Popup","regionsGeoJSON","jsxDEV","_jsxDEV","RegionContext","RegionProvider","children","_s","regions","setRegions","incrementRegion","regionName","prev","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","Dashboard","style","display","flexDirection","alignItems","fontFamily","RegionForm","RegionMap","_c2","_s2","selectedRegion","setSelectedRegion","handleSubmit","e","preventDefault","onSubmit","gap","marginBottom","onChange","target","padding","width","features","map","region","properties","nom","type","disabled","backgroundColor","_c3","_s3","getColor","count","intensity","Math","min","onEachFeature","feature","layer","setStyle","fillColor","fillOpacity","color","weight","popupContent","bindPopup","height","maxWidth","center","zoom","maxZoom","minZoom","url","attribution","data","JSON","stringify","geometry","coordinates","position","_c4","$RefreshReg$"],"sources":["/Users/JOJO/Documents/devArea/inProgress/mapstats/src/components/Dashboard/index.jsx"],"sourcesContent":["import React, { useState, useContext, createContext } from 'react';\nimport { MapContainer, TileLayer, GeoJSON, Marker, Popup } from 'react-leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport regionsGeoJSON from './france-regions.json';\n\n// Contexte pour gérer les régions\nconst RegionContext = createContext();\n\nconst RegionProvider = ({ children }) => {\n  const [regions, setRegions] = useState({});\n\n  const incrementRegion = (regionName) => {\n    setRegions((prev) => ({\n      ...prev,\n      [regionName]: (prev[regionName] || 0) + 1,\n    }));\n  };\n\n  return (\n    <RegionContext.Provider value={{ regions, incrementRegion }}>\n      {children}\n    </RegionContext.Provider>\n  );\n};\n\nconst Dashboard = () => {\n  return (\n    <RegionProvider>\n      <div\n        style={{\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n          fontFamily: 'Arial, sans-serif',\n        }}\n      >\n        <h1>Carte des Régions Françaises</h1>\n        <RegionForm />\n        <RegionMap />\n      </div>\n    </RegionProvider>\n  );\n};\n\nconst RegionForm = () => {\n  const { incrementRegion } = useContext(RegionContext);\n  const [selectedRegion, setSelectedRegion] = useState('');\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (selectedRegion) {\n      incrementRegion(selectedRegion);\n      setSelectedRegion('');\n    }\n  };\n\n  return (\n    <form\n      onSubmit={handleSubmit}\n      style={{\n        display: 'flex',\n        gap: '10px',\n        marginBottom: '20px',\n      }}\n    >\n      <select\n        value={selectedRegion}\n        onChange={(e) => setSelectedRegion(e.target.value)}\n        style={{ padding: '5px', width: '200px' }}\n      >\n        <option value=\"\">Sélectionnez une région</option>\n        {regionsGeoJSON.features.map((region) => (\n          <option key={region.properties.nom} value={region.properties.nom}>\n            {region.properties.nom}\n          </option>\n        ))}\n      </select>\n      <button\n        type=\"submit\"\n        disabled={!selectedRegion}\n        style={{\n          padding: '5px 10px',\n          backgroundColor: selectedRegion ? '#4CAF50' : '#cccccc',\n        }}\n      >\n        Ajouter\n      </button>\n    </form>\n  );\n};\n\nconst RegionMap = () => {\n  const { regions } = useContext(RegionContext);\n\n  const getColor = (regionName) => {\n    const count = regions[regionName] || 0;\n    const intensity = Math.min(count * 20, 255); // Limite à 255\n    return `rgb(255, ${255 - intensity}, ${255 - intensity})`;\n  };\n\n  const onEachFeature = (feature, layer) => {\n    const regionName = feature.properties.nom;\n    const count = regions[regionName] || 0;\n\n    layer.setStyle({\n      fillColor: getColor(regionName),\n      fillOpacity: 0.7,\n      color: '#000',\n      weight: 1,\n    });\n\n    const popupContent = `\n      <div style=\"text-align: center;\">\n        <strong>${regionName}</strong><br>\n        Nombre d'ajouts: ${count}\n      </div>\n    `;\n    layer.bindPopup(popupContent);\n  };\n\n  return (\n    <MapContainer\n      style={{ height: '600px', width: '100%', maxWidth: '1000px' }}\n      center={[46.5, 2.5]}\n      zoom={5}\n      maxZoom={10}\n      minZoom={4}\n    >\n      <TileLayer\n        url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n      />\n      <GeoJSON\n        key={JSON.stringify(regions)}\n        data={regionsGeoJSON}\n        onEachFeature={onEachFeature}\n      />\n      {regionsGeoJSON.features.map((feature) => {\n        const regionName = feature.properties.nom;\n        const count = regions[regionName] || 0;\n        if (count > 0) {\n          const center = feature.geometry.coordinates[0][0]; // Simplification, utilisez turf.js pour plus de précision\n          return (\n            <Marker key={regionName} position={[center[1], center[0]]}>\n              <Popup>\n                <strong>{regionName}</strong>: {count}\n              </Popup>\n            </Marker>\n          );\n        }\n        return null;\n      })}\n    </MapContainer>\n  );\n};\n\nexport default Dashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}