{"ast":null,"code":"var _jsxFileName = \"/Users/JOJO/Documents/devArea/inProgress/mapstats/client/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport France from \"@socialgouv/react-departements\";\nimport { AddCompanyForm } from \"./components/AddCompanyForm\";\nimport { CompanyTable } from \"./components/CompanyTable\";\n\n// import CONST\nimport { DEPARTEMENTS_ILE_DE_FRANCE, ETATS_ENTREPRISE } from \"./constants/global\";\n\n// State manager\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchCompanies } from \"./redux/features/companiesSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const dispatch = useDispatch();\n  const {\n    items,\n    status,\n    error\n  } = useSelector(state => state.companies);\n  const entreprises = items;\n  const [candidature, setCandidature] = useState({\n    EN_ATTENTE: 0,\n    ENTRETIEN: 0,\n    REFUS: 0\n  });\n  useEffect(() => {\n    dispatch(fetchCompanies());\n  }, [dispatch]);\n  useEffect(() => {\n    // Recalculer les compteurs chaque fois que entreprises change\n    const newCandidature = {\n      EN_ATTENTE: 0,\n      ENTRETIEN: 0,\n      REFUS: 0\n    };\n    entreprises.forEach(entreprise => {\n      if (entreprise.etat === \"en attente\") {\n        newCandidature.EN_ATTENTE++;\n      } else if (entreprise.etat === \"entretien\") {\n        newCandidature.ENTRETIEN++;\n      } else if (entreprise.etat === \"refus\") {\n        newCandidature.REFUS++;\n      }\n    });\n    setCandidature(newCandidature);\n  }, [entreprises]);\n  const entreprisesParLocalisation = entreprises.reduce((acc, entreprise) => {\n    const key = entreprise.pays === \"France\" ? entreprise.departement : entreprise.pays;\n    acc[key] = (acc[key] || 0) + 1;\n    return acc;\n  }, {});\n  const departementsPourCarte = [...new Set(Object.keys(entreprisesParLocalisation).filter(key => entreprises.some(e => e.pays === \"France\" && (e.departement === key || [\"75\", \"92\", \"93\", \"94\"].includes(key) && DEPARTEMENTS_ILE_DE_FRANCE.includes(e.departement)))).flatMap(dept => [\"75\", \"92\", \"93\", \"94\"].includes(dept) ? DEPARTEMENTS_ILE_DE_FRANCE : [dept]))];\n  const entreprisesFrancaises = entreprises.filter(e => e.pays === \"France\");\n  const entreprisesInternationales = entreprises.filter(e => e.pays !== \"France\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Recherche d'emploi\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"\\u23F3 En attente : \", candidature.EN_ATTENTE]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"\\uD83D\\uDCC6 Entretien : \", candidature.ENTRETIEN]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Refus : \", candidature.REFUS]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(France, {\n        departements: departementsPourCarte,\n        selectedColor: \"#007bff\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(AddCompanyForm, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Entreprises fran\\xE7aises\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CompanyTable, {\n        companies: entreprisesFrancaises,\n        entreprisesParLocalisation: entreprisesParLocalisation,\n        ETATS_ENTREPRISE: ETATS_ENTREPRISE\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Entreprises internationales\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CompanyTable, {\n        companies: entreprisesInternationales,\n        isInternational: true,\n        entreprisesParLocalisation: entreprisesParLocalisation,\n        ETATS_ENTREPRISE: ETATS_ENTREPRISE\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"lpXc3Jqvh/V7ke/pht/ydyecUvE=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = App;\nexport default function AppWrapper() {\n  return /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 10\n  }, this);\n}\n_c2 = AppWrapper;\nvar _c, _c2;\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"AppWrapper\");","map":{"version":3,"names":["React","useEffect","useState","France","AddCompanyForm","CompanyTable","DEPARTEMENTS_ILE_DE_FRANCE","ETATS_ENTREPRISE","useDispatch","useSelector","fetchCompanies","jsxDEV","_jsxDEV","App","_s","dispatch","items","status","error","state","companies","entreprises","candidature","setCandidature","EN_ATTENTE","ENTRETIEN","REFUS","newCandidature","forEach","entreprise","etat","entreprisesParLocalisation","reduce","acc","key","pays","departement","departementsPourCarte","Set","Object","keys","filter","some","e","includes","flatMap","dept","entreprisesFrancaises","entreprisesInternationales","className","children","fileName","_jsxFileName","lineNumber","columnNumber","departements","selectedColor","isInternational","_c","AppWrapper","_c2","$RefreshReg$"],"sources":["/Users/JOJO/Documents/devArea/inProgress/mapstats/client/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport France from \"@socialgouv/react-departements\";\nimport { AddCompanyForm } from \"./components/AddCompanyForm\";\nimport { CompanyTable } from \"./components/CompanyTable\";\n\n// import CONST\nimport {\n  DEPARTEMENTS_ILE_DE_FRANCE,\n  ETATS_ENTREPRISE,\n} from \"./constants/global\";\n\n// State manager\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchCompanies } from \"./redux/features/companiesSlice\";\n\nfunction App() {\n  const dispatch = useDispatch();\n  const { items, status, error } = useSelector((state) => state.companies);\n  const entreprises = items;\n\n  const [candidature, setCandidature] = useState({\n    EN_ATTENTE: 0,\n    ENTRETIEN: 0,\n    REFUS: 0,\n  });\n\n  useEffect(() => {\n    dispatch(fetchCompanies());\n  }, [dispatch]);\n\n  useEffect(() => {\n    // Recalculer les compteurs chaque fois que entreprises change\n    const newCandidature = {\n      EN_ATTENTE: 0,\n      ENTRETIEN: 0,\n      REFUS: 0,\n    };\n\n    entreprises.forEach((entreprise) => {\n      if (entreprise.etat === \"en attente\") {\n        newCandidature.EN_ATTENTE++;\n      } else if (entreprise.etat === \"entretien\") {\n        newCandidature.ENTRETIEN++;\n      } else if (entreprise.etat === \"refus\") {\n        newCandidature.REFUS++;\n      }\n    });\n\n    setCandidature(newCandidature);\n  }, [entreprises]);\n\n  const entreprisesParLocalisation = entreprises.reduce((acc, entreprise) => {\n    const key =\n      entreprise.pays === \"France\" ? entreprise.departement : entreprise.pays;\n    acc[key] = (acc[key] || 0) + 1;\n    return acc;\n  }, {});\n\n  const departementsPourCarte = [\n    ...new Set(\n      Object.keys(entreprisesParLocalisation)\n        .filter((key) =>\n          entreprises.some(\n            (e) =>\n              e.pays === \"France\" &&\n              (e.departement === key ||\n                ([\"75\", \"92\", \"93\", \"94\"].includes(key) &&\n                  DEPARTEMENTS_ILE_DE_FRANCE.includes(e.departement)))\n          )\n        )\n        .flatMap((dept) =>\n          [\"75\", \"92\", \"93\", \"94\"].includes(dept)\n            ? DEPARTEMENTS_ILE_DE_FRANCE\n            : [dept]\n        )\n    ),\n  ];\n\n  const entreprisesFrancaises = entreprises.filter((e) => e.pays === \"France\");\n  const entreprisesInternationales = entreprises.filter(\n    (e) => e.pays !== \"France\"\n  );\n\n  return (\n    <div className=\"App\">\n      <section>\n        <h1>Recherche d'emploi</h1>\n        <div>\n          <p>⏳ En attente : {candidature.EN_ATTENTE}</p>\n          <p>📆 Entretien : {candidature.ENTRETIEN}</p>\n          <p>Refus : {candidature.REFUS}</p>\n        </div>\n        <France departements={departementsPourCarte} selectedColor=\"#007bff\" />\n      </section>\n      <section>\n        <AddCompanyForm />\n\n        <h2>Entreprises françaises</h2>\n        <CompanyTable\n          companies={entreprisesFrancaises}\n          entreprisesParLocalisation={entreprisesParLocalisation}\n          ETATS_ENTREPRISE={ETATS_ENTREPRISE}\n        />\n\n        <h2>Entreprises internationales</h2>\n        <CompanyTable\n          companies={entreprisesInternationales}\n          isInternational={true}\n          entreprisesParLocalisation={entreprisesParLocalisation}\n          ETATS_ENTREPRISE={ETATS_ENTREPRISE}\n        />\n      </section>\n    </div>\n  );\n}\n\nexport default function AppWrapper() {\n  return <App />;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}