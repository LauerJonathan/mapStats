{"ast":null,"code":"var _jsxFileName = \"/Users/JOJO/Documents/devArea/inProgress/mapstats/src/App.js\",\n  _s = $RefreshSig$();\nimport { AddCompanyForm } from \"./components/AddCompanyForm\";\nimport { useEntreprises } from \"./contexts/EntrepriseContext\";\nimport { determinerLocalisation } from \"./utils/location\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const {\n    entreprises,\n    ajouterEntreprise,\n    changerEtatEntreprise,\n    supprimerToutesEntreprises,\n    ETATS_ENTREPRISE\n  } = useEntreprises();\n  const handleAddCompany = async formData => {\n    const localisation = await determinerLocalisation(formData.ville, formData.pays);\n    if (localisation) {\n      const localisations = Array.isArray(localisation) ? localisation : [localisation];\n      const nouvelleEntreprise = {\n        ...formData,\n        departement: localisations[0]\n      };\n      ajouterEntreprise(nouvelleEntreprise);\n      return true;\n    } else {\n      alert(\"Impossible de détecter la localisation pour cette ville.\");\n      return false;\n    }\n  };\n  const entreprisesParLocalisation = entreprises.reduce((acc, entreprise) => {\n    const key = entreprise.pays === \"France\" ? entreprise.departement : entreprise.pays;\n    acc[key] = (acc[key] || 0) + 1;\n    return acc;\n  }, {});\n  const departementsPourCarte = [...new Set(Object.keys(entreprisesParLocalisation).filter(key => entreprises.some(e => e.pays === \"France\" && (e.departement === key || [\"75\", \"92\", \"93\", \"94\"].includes(key) && DEPARTEMENTS_ILE_DE_FRANCE.includes(e.departement)))).flatMap(dept => [\"75\", \"92\", \"93\", \"94\"].includes(dept) ? DEPARTEMENTS_ILE_DE_FRANCE : [dept]))];\n  const entreprisesFrancaises = entreprises.filter(e => e.pays === \"France\");\n  const entreprisesInternationales = entreprises.filter(e => e.pays !== \"France\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Recherche d'emploi\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(France, {\n        departements: departementsPourCarte,\n        selectedColor: \"#007bff\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(AddCompanyForm, {\n        onAddCompany: handleAddCompany\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: supprimerToutesEntreprises,\n        children: \"Supprimer toutes les entreprises\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Entreprises fran\\xE7aises\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CompanyTable, {\n        companies: entreprisesFrancaises,\n        entreprisesParLocalisation: entreprisesParLocalisation,\n        ETATS_ENTREPRISE: ETATS_ENTREPRISE,\n        changerEtatEntreprise: changerEtatEntreprise\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Entreprises internationales\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CompanyTable, {\n        companies: entreprisesInternationales,\n        isInternational: true,\n        entreprisesParLocalisation: entreprisesParLocalisation,\n        ETATS_ENTREPRISE: ETATS_ENTREPRISE,\n        changerEtatEntreprise: changerEtatEntreprise\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"xuGW7W5FrVdSjOyagnRo1ZKpYE8=\", false, function () {\n  return [useEntreprises];\n});\n_c = App;\nexport default function AppWrapper() {\n  return /*#__PURE__*/_jsxDEV(EntreprisesProvider, {\n    children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 5\n  }, this);\n}\n_c2 = AppWrapper;\nvar _c, _c2;\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"AppWrapper\");","map":{"version":3,"names":["AddCompanyForm","useEntreprises","determinerLocalisation","jsxDEV","_jsxDEV","App","_s","entreprises","ajouterEntreprise","changerEtatEntreprise","supprimerToutesEntreprises","ETATS_ENTREPRISE","handleAddCompany","formData","localisation","ville","pays","localisations","Array","isArray","nouvelleEntreprise","departement","alert","entreprisesParLocalisation","reduce","acc","entreprise","key","departementsPourCarte","Set","Object","keys","filter","some","e","includes","DEPARTEMENTS_ILE_DE_FRANCE","flatMap","dept","entreprisesFrancaises","entreprisesInternationales","className","children","fileName","_jsxFileName","lineNumber","columnNumber","France","departements","selectedColor","onAddCompany","onClick","CompanyTable","companies","isInternational","_c","AppWrapper","EntreprisesProvider","_c2","$RefreshReg$"],"sources":["/Users/JOJO/Documents/devArea/inProgress/mapstats/src/App.js"],"sourcesContent":["import { AddCompanyForm } from \"./components/AddCompanyForm\";\nimport { useEntreprises } from \"./contexts/EntrepriseContext\";\nimport { determinerLocalisation } from \"./utils/location\";\n\nfunction App() {\n  const {\n    entreprises,\n    ajouterEntreprise,\n    changerEtatEntreprise,\n    supprimerToutesEntreprises,\n    ETATS_ENTREPRISE,\n  } = useEntreprises();\n\n  const handleAddCompany = async (formData) => {\n    const localisation = await determinerLocalisation(\n      formData.ville,\n      formData.pays\n    );\n\n    if (localisation) {\n      const localisations = Array.isArray(localisation)\n        ? localisation\n        : [localisation];\n\n      const nouvelleEntreprise = {\n        ...formData,\n        departement: localisations[0],\n      };\n\n      ajouterEntreprise(nouvelleEntreprise);\n      return true;\n    } else {\n      alert(\"Impossible de détecter la localisation pour cette ville.\");\n      return false;\n    }\n  };\n\n  const entreprisesParLocalisation = entreprises.reduce((acc, entreprise) => {\n    const key =\n      entreprise.pays === \"France\" ? entreprise.departement : entreprise.pays;\n    acc[key] = (acc[key] || 0) + 1;\n    return acc;\n  }, {});\n\n  const departementsPourCarte = [\n    ...new Set(\n      Object.keys(entreprisesParLocalisation)\n        .filter((key) =>\n          entreprises.some(\n            (e) =>\n              e.pays === \"France\" &&\n              (e.departement === key ||\n                ([\"75\", \"92\", \"93\", \"94\"].includes(key) &&\n                  DEPARTEMENTS_ILE_DE_FRANCE.includes(e.departement)))\n          )\n        )\n        .flatMap((dept) =>\n          [\"75\", \"92\", \"93\", \"94\"].includes(dept)\n            ? DEPARTEMENTS_ILE_DE_FRANCE\n            : [dept]\n        )\n    ),\n  ];\n\n  const entreprisesFrancaises = entreprises.filter((e) => e.pays === \"France\");\n  const entreprisesInternationales = entreprises.filter(\n    (e) => e.pays !== \"France\"\n  );\n\n  return (\n    <div className=\"App\">\n      <section>\n        <h1>Recherche d'emploi</h1>\n        <France departements={departementsPourCarte} selectedColor=\"#007bff\" />\n      </section>\n\n      <section>\n        <AddCompanyForm onAddCompany={handleAddCompany} />\n        <button onClick={supprimerToutesEntreprises}>\n          Supprimer toutes les entreprises\n        </button>\n\n        <h2>Entreprises françaises</h2>\n        <CompanyTable\n          companies={entreprisesFrancaises}\n          entreprisesParLocalisation={entreprisesParLocalisation}\n          ETATS_ENTREPRISE={ETATS_ENTREPRISE}\n          changerEtatEntreprise={changerEtatEntreprise}\n        />\n\n        <h2>Entreprises internationales</h2>\n        <CompanyTable\n          companies={entreprisesInternationales}\n          isInternational={true}\n          entreprisesParLocalisation={entreprisesParLocalisation}\n          ETATS_ENTREPRISE={ETATS_ENTREPRISE}\n          changerEtatEntreprise={changerEtatEntreprise}\n        />\n      </section>\n    </div>\n  );\n}\n\nexport default function AppWrapper() {\n  return (\n    <EntreprisesProvider>\n      <App />\n    </EntreprisesProvider>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}