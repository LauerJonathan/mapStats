{"ast":null,"code":"import { DEPARTEMENTS_ILE_DE_FRANCE } from \"../constants/location\";\nasync function determinerLocalisation(ville, pays) {\n  if (pays === \"France\") {\n    try {\n      const response = await fetch(`https://geo.api.gouv.fr/communes?nom=${ville}&fields=nom,codeDepartement`);\n      const data = await response.json();\n      if (data.length > 0) {\n        const villeExacte = data.find(commune => commune.nom.toLowerCase() === ville.toLowerCase());\n        let departementCode = villeExacte ? villeExacte.codeDepartement : data[0].codeDepartement;\n        return [\"75\", \"92\", \"93\", \"94\"].includes(departementCode) ? DEPARTEMENTS_ILE_DE_FRANCE : departementCode;\n      }\n      return \"\";\n    } catch (error) {\n      console.error(\"Erreur lors de la détection du département :\", error);\n      return \"\";\n    }\n  }\n  return pays;\n}","map":{"version":3,"names":["DEPARTEMENTS_ILE_DE_FRANCE","determinerLocalisation","ville","pays","response","fetch","data","json","length","villeExacte","find","commune","nom","toLowerCase","departementCode","codeDepartement","includes","error","console"],"sources":["/Users/JOJO/Documents/devArea/inProgress/mapstats/src/utils/location.js"],"sourcesContent":["import { DEPARTEMENTS_ILE_DE_FRANCE } from \"../constants/location\";\n\n async function determinerLocalisation(ville, pays) {\n  if (pays === \"France\") {\n    try {\n      const response = await fetch(\n        `https://geo.api.gouv.fr/communes?nom=${ville}&fields=nom,codeDepartement`\n      );\n      const data = await response.json();\n      if (data.length > 0) {\n        const villeExacte = data.find(\n          (commune) => commune.nom.toLowerCase() === ville.toLowerCase()\n        );\n\n        let departementCode = villeExacte\n          ? villeExacte.codeDepartement\n          : data[0].codeDepartement;\n\n        return [\"75\", \"92\", \"93\", \"94\"].includes(departementCode)\n          ? DEPARTEMENTS_ILE_DE_FRANCE\n          : departementCode;\n      }\n      return \"\";\n    } catch (error) {\n      console.error(\"Erreur lors de la détection du département :\", error);\n      return \"\";\n    }\n  }\n  return pays;\n}\n"],"mappings":"AAAA,SAASA,0BAA0B,QAAQ,uBAAuB;AAEjE,eAAeC,sBAAsBA,CAACC,KAAK,EAAEC,IAAI,EAAE;EAClD,IAAIA,IAAI,KAAK,QAAQ,EAAE;IACrB,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1B,wCAAwCH,KAAK,6BAC/C,CAAC;MACD,MAAMI,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAClC,IAAID,IAAI,CAACE,MAAM,GAAG,CAAC,EAAE;QACnB,MAAMC,WAAW,GAAGH,IAAI,CAACI,IAAI,CAC1BC,OAAO,IAAKA,OAAO,CAACC,GAAG,CAACC,WAAW,CAAC,CAAC,KAAKX,KAAK,CAACW,WAAW,CAAC,CAC/D,CAAC;QAED,IAAIC,eAAe,GAAGL,WAAW,GAC7BA,WAAW,CAACM,eAAe,GAC3BT,IAAI,CAAC,CAAC,CAAC,CAACS,eAAe;QAE3B,OAAO,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAACC,QAAQ,CAACF,eAAe,CAAC,GACrDd,0BAA0B,GAC1Bc,eAAe;MACrB;MACA,OAAO,EAAE;IACX,CAAC,CAAC,OAAOG,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,8CAA8C,EAAEA,KAAK,CAAC;MACpE,OAAO,EAAE;IACX;EACF;EACA,OAAOd,IAAI;AACb","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}