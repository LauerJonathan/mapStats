{"ast":null,"code":"var _jsxFileName = \"/Users/JOJO/Documents/devArea/inProgress/mapstats/client/src/components/AddCompanyForm/index.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\"; // Importer useDispatch et useSelector\nimport { addCompany } from \"../../redux/features/companiesSlice\"; // Importer l'action addCompany\nimport { determinerLocalisation } from \"../../utils/location\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function AddCompanyForm() {\n  _s();\n  const [formData, setFormData] = useState({\n    nom: \"\",\n    poste: \"\",\n    ville: \"\",\n    departement: \"\",\n    pays: \"France\"\n  });\n  const handleAddCompany = async formData => {\n    const localisation = await determinerLocalisation(formData.ville, formData.pays);\n    if (localisation) {\n      const localisations = Array.isArray(localisation) ? localisation : [localisation];\n      const nouvelleEntreprise = {\n        ...formData,\n        departement: localisations[0]\n      };\n      return true;\n    } else {\n      alert(\"Impossible de détecter la localisation pour cette ville.\");\n      return false;\n    }\n  };\n  const dispatch = useDispatch();\n\n  // Sélectionner l'état de l'ajout de l'entreprise\n  const {\n    status,\n    error\n  } = useSelector(state => state.companies);\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const localisation = await determinerLocalisation(formData.ville, formData.pays);\n    if (localisation) {\n      const localisations = Array.isArray(localisation) ? localisation : [localisation];\n      setFormData({\n        ...formData,\n        departement: localisation\n      });\n    } else {\n      alert(\"Impossible de détecter la localisation pour cette ville.\");\n    }\n    try {\n      const action = await dispatch(addCompany(formData));\n\n      // Vérification de la réussite de l'action\n      if (addCompany.fulfilled.match(action)) {\n        setFormData({\n          nom: \"\",\n          poste: \"\",\n          ville: \"\",\n          departement: \"\",\n          pays: \"France\"\n        });\n      } else {\n        console.error(\"Erreur lors de l'ajout de l'entreprise\");\n      }\n    } catch (error) {\n      console.error(\"Erreur lors de l'ajout de l'entreprise:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Nom de l'entreprise :\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"nom\",\n        value: formData.nom,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Ville :\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"ville\",\n        value: formData.ville,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Poste :\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"poste\",\n        value: formData.poste,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Pays :\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"pays\",\n        value: formData.pays,\n        onChange: handleChange,\n        required: true,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"France\",\n          children: \"France\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Suisse\",\n          children: \"Suisse\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Luxembourg\",\n          children: \"Luxembourg\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Belgique\",\n          children: \"Belgique\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Ajouter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this), status === \"loading\" && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Enregistrement de l'entreprise...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 32\n    }, this), status === \"failed\" && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      children: [\"Erreur: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 31\n    }, this), status === \"succeeded\" && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Entreprise ajout\\xE9e avec succ\\xE8s!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 34\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n}\n_s(AddCompanyForm, \"jfAS6h/tGNFf/nDlZrlxWK+Rkq4=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = AddCompanyForm;\nvar _c;\n$RefreshReg$(_c, \"AddCompanyForm\");","map":{"version":3,"names":["React","useState","useDispatch","useSelector","addCompany","determinerLocalisation","jsxDEV","_jsxDEV","AddCompanyForm","_s","formData","setFormData","nom","poste","ville","departement","pays","handleAddCompany","localisation","localisations","Array","isArray","nouvelleEntreprise","alert","dispatch","status","error","state","companies","handleChange","e","name","value","target","prev","handleSubmit","preventDefault","action","fulfilled","match","console","onSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","required","style","color","_c","$RefreshReg$"],"sources":["/Users/JOJO/Documents/devArea/inProgress/mapstats/client/src/components/AddCompanyForm/index.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\"; // Importer useDispatch et useSelector\nimport { addCompany } from \"../../redux/features/companiesSlice\"; // Importer l'action addCompany\nimport { determinerLocalisation } from \"../../utils/location\";\n\nexport function AddCompanyForm() {\n  const [formData, setFormData] = useState({\n    nom: \"\",\n    poste: \"\",\n    ville: \"\",\n    departement: \"\",\n    pays: \"France\",\n  });\n\n  const handleAddCompany = async (formData) => {\n    const localisation = await determinerLocalisation(\n      formData.ville,\n      formData.pays\n    );\n\n    if (localisation) {\n      const localisations = Array.isArray(localisation)\n        ? localisation\n        : [localisation];\n\n      const nouvelleEntreprise = {\n        ...formData,\n        departement: localisations[0],\n      };\n      return true;\n    } else {\n      alert(\"Impossible de détecter la localisation pour cette ville.\");\n      return false;\n    }\n  };\n\n  const dispatch = useDispatch();\n\n  // Sélectionner l'état de l'ajout de l'entreprise\n  const { status, error } = useSelector((state) => state.companies);\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormData((prev) => ({ ...prev, [name]: value }));\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    const localisation = await determinerLocalisation(\n      formData.ville,\n      formData.pays\n    );\n\n    if (localisation) {\n      const localisations = Array.isArray(localisation)\n        ? localisation\n        : [localisation];\n      setFormData({ ...formData, departement: localisation });\n    } else {\n      alert(\"Impossible de détecter la localisation pour cette ville.\");\n    }\n\n    try {\n      const action = await dispatch(addCompany(formData));\n\n      // Vérification de la réussite de l'action\n      if (addCompany.fulfilled.match(action)) {\n        setFormData({\n          nom: \"\",\n          poste: \"\",\n          ville: \"\",\n          departement: \"\",\n          pays: \"France\",\n        });\n      } else {\n        console.error(\"Erreur lors de l'ajout de l'entreprise\");\n      }\n    } catch (error) {\n      console.error(\"Erreur lors de l'ajout de l'entreprise:\", error);\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <div>\n        <label>Nom de l'entreprise :</label>\n        <input\n          type=\"text\"\n          name=\"nom\"\n          value={formData.nom}\n          onChange={handleChange}\n          required\n        />\n      </div>\n\n      <div>\n        <label>Ville :</label>\n        <input\n          type=\"text\"\n          name=\"ville\"\n          value={formData.ville}\n          onChange={handleChange}\n          required\n        />\n      </div>\n\n      <div>\n        <label>Poste :</label>\n        <input\n          type=\"text\"\n          name=\"poste\"\n          value={formData.poste}\n          onChange={handleChange}\n          required\n        />\n      </div>\n\n      <div>\n        <label>Pays :</label>\n        <select\n          name=\"pays\"\n          value={formData.pays}\n          onChange={handleChange}\n          required>\n          <option value=\"France\">France</option>\n          <option value=\"Suisse\">Suisse</option>\n          <option value=\"Luxembourg\">Luxembourg</option>\n          <option value=\"Belgique\">Belgique</option>\n        </select>\n      </div>\n\n      <button type=\"submit\">Ajouter</button>\n\n      {/* Affichage du status */}\n      {status === \"loading\" && <p>Enregistrement de l'entreprise...</p>}\n      {status === \"failed\" && <p style={{ color: \"red\" }}>Erreur: {error}</p>}\n      {status === \"succeeded\" && <p>Entreprise ajoutée avec succès!</p>}\n    </form>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}